一、css基础
1.css概念
css:cascading style sheets,层叠式样式表，规定了html标签在网页上的显示样式。
html4的时候，w3c组织将html的结构和样式做了分离。
前端三层：
html            结构层，搭建网页的整体架构。
css               样式层，装饰页面。
JavaScript    行为层，一些页面交互效果。

2.css作用
css两个重要的概念：层叠式，样式。
样式：html标签在页面的显示效果。
某个标签有什么样式，直接将对应的属性及属性值罗列出来。 
div{
	width: 300px;
	height: 500px;
	background: lightblue;
	color: red;
	font-size: 20px;
	font-weight: bold;
      }
css样式设置的时候，有两个关键：选择器，样式表。
css作用细化：
a.给文本添加文字显示样式。
b.给盒子添加属性进行结构布局。

3.css几个小属性
a.文本样式
字体、颜色、大小。

大小：font-size 本身是一个复合属性 font，里面的单一属性，需要用font-单一属性名。
属性值，以像素为单位。	
font-size: 20px;

颜色：color，属性值有几种选择方案：十六进制，RGB，rgba，颜色名（英文名）。
紫色：purple
金色：gold
天蓝色：skyblue
粉色：pink
其它颜色自行百度~
color: red;

字体：font-family，复合属性的单一属性，中文字体和英文字体。
英文常用字体：Arial，consolas。
中文字体：默认字体为宋体，常用字体有宋体、微软雅黑，所有电脑都有宋体，选字体要标注好备用字体。
（一般英文在前中文在后，记得加备用字体。）
font-family: "Arial","隶书","微软雅黑","宋体";
字体用引号包裹，字体之间用英文逗号隔开。
为了追求加载速度，将一些中文字体写成英文表示发。
微软雅黑：Microsoft Yahei.
宋体：SimSun.
font-family: "Arial","Microsoft Yahei","SimSun";

b.盒子实体化基本属性
实体化：宽、高、背景色、边框。
宽度：width。单位像素px。
高度：height。单位像素px。
背景色：background-color。属性值，颜色色值。
边框：border。复合属性，有多个属性值，属性值之间用逗号隔开，边框的宽度、颜色、线的类型。
实线边框：solid.
   width: 300px;
   height: 500px;
   background:skyblue;
   border: 2px solid red;

4.css的书写位置；
根据书写css属性位置的不同，将我们的样式分为三种：行内式、内嵌式、外链式。

行内式（通常不使用）：css属性写在标签的一个style属性里，可以书写它的所有css样式。
<div style="color: red;width: 300px;height: 300px;background: pink;">这是一个行内式css</div>

内嵌式：
写在html文件里，head标签内有一对style标签，是一个双标签，我们的css样式属性都写在双标签内部。
style标签有一个type属性，属性值”text/css“,表示我们内部写的是纯文本类型的css样式代码。
     body{
	background: lightyellow;
	width: 800px;
	height: 1000px;
              }
实际学习中，常用内嵌式。
行内式一般留给后台添加的。
外链式：在项目实战的时候具体讲解，将css单独写在令一个css文件里。

5.css的注意事项
html的属性和属性值，键值对：k="v".
css的属性和属性值，键值对：k:v;
多个属性之间必须用；号隔开。不写会出错。
内嵌式：所有的样式必须写在一对大括号里。
css样式，对于换行、空格、缩进也不敏感。
css样式书写时，要进行合理的换行和缩进，这样可以提高代码可读性。
将代码上传到网上时：为了提高加载速度，需要将所有的空格、缩进、换行等删除，压缩代码（网上有对应的压缩工具）。

二、基础选择器
选择器：指的是我们选择需要添加样式的标签元素的模式。
1、标签选择器
通过标签名直接选择相应的标签，标签是什么，就选择用什么使用。
标签选择器选中的是页面所有的对应标签，不管嵌套关系多复杂，标签位置藏得多深，都能通过标签选择器选中。
因为标签选择器会选中所有的标签，实际工作中，不会用来更改某一个元素属性，因为会影响其他元素。
用途：利用标签选择所有，进行初始样式的设置，默认样式的清除。
标签选择器劣势：会选中所有的元素，不能进行单独或者部分控制。
   div{
	width: 300px;
	height: 500px;
	background: lightblue;
        }  
多个标签用逗号隔开例如：div,p{}           

2、id选择器
通过标签的id属性值来选择相应的标签。
选择器书写：#开头，后面紧跟着id名，中间没有任何空格。
由于我们的id名唯一，所以id选择器只能选中一个元素。
#xbl{
	width: 300px;
	height: 500px;
	background: lightblue;
        }                
标签都有id属性，属性值也就是id名命名需要遵循一个规则：
必须以字母开头（严格区分大小写，A和a表示的不一样），后面可以是数字、下划线或者横线 
一个页面不允许两个相同的id名，即使是不同类型标签。
id选择器劣势：
只能选中一个元素，如果有相同的样式，只能分别命名id名，多次书写相同属性。（有点浪费资源） 
id常用场景：并不是用来添加样式，而是留给js添加行为。
多个标签这样写#reg input{}

3、类选择器（最常用）
通过标签的class属性来选择这个标签。
选择器写法：
.开头，后面跟class属性值，中间不能有空格。
class属性值可以不唯一，类选择器选中的是所有相同的class属性名的元素。  
      .xbl2{
	color: red; 
             }
标签的class属性，属性值命名规则与id一样。
优点：可以选择一部分标签，添加相同的样式。
根据类的特性，我们要习惯使用原子类，原子类设置的原则，里面只设置一个单一的css属性，某一个标签
需要添加这个属性，可以直接添加这个原子类的类名。
<p class="lv daxiao"> 
	   新年快乐
	</p>
一个标签的class可以有多个属性值，有多个类名。
类选择器好用，多用于css样式书写。
一句话“类上样式，id上行为”
多个标签这样写.xbl .xbl2{}

4、通配符 “*”（不常用）
可以选中包括body在内的所有标签。
现在已经不常用，效率不高。
可以用作简单案例里面清除默认样式。
  *{
     margin：0；
     padding：0；
   }
实际工作中清除默认样式：用的是默认样式的标签选择器。

三、高级选择器
基础选择器并不能满足我们所有的需求，在基础选择器基础上进行了一些延伸。
分类有三种：后代选择器、交集选择、并集选择器。

1、后代选择器
后代选择器又叫包含选择器。
通过标签之间的嵌套关系、层级关系，限定我们大体范围，在范围内具体查找相关元素。
.box li{
	color: red;
          }
.box .one{
	color: red;
          }
后代选择器：根据嵌套关系，空格左侧是右侧的祖先元素。
后代选择器空格两边只要是后代关系都可以，不一定是父子关系。
一般的开始的祖先元素都不使用标签选择器。
可以根据嵌套关系来确定最终元素。

2、交集选择器
既满足条件一又满足条件二。
两种或者以上选择器同时存在一个标签上。
写法：选择器之间直接连接，没有任何符号。
标签选择器.类选择器
p.one{
      color:blue;
         }
交集使用的基础选择器，可以都是类选择器，也可以是标签选择器和类选择器的混写。
以下是交集的连续书写：
li.o.u{
       color:red;

3、并集选择器
有很多元素可能都有相同的css样式，我们可以通过并集选择器将这些标签写在一起，统一设置css样式。
前面所有的选择器都可以作为并集选择器的一项，在选择器中用逗号隔开即可。
            }
上面表示：这个元素既要是li标签，又必须是o的类名 ，还有u的类型。
<li class="o u">你好呀</li>
兼容问题:IE6不支持类的连续交集。
        p,li.o{
	color: yellow;
	}
等价于：
              p{
	color: yellow;
	}
             li.o{
	color: yellow;
	}
用途：
a.多个选择器的元素使用同一个样式。
b.清空默认样式

四、继承性和层叠性
1、继承性
有一些属性给祖先元素设置了，后代元素会继承。
css继承性：后代元素能够继承来自祖先元素的样式，不能继承盒子的样式。
继承性这个特性很好，我们可以将整体的 文字样式写在最祖先元素body，后面的标签自动去继承。
层叠式的第一个特性：继承性

2、层叠性
我们学了多种选择器，同一个标签可以被多个选择器都选中。
问题：多个选择器选中一个元素，相同的样式听谁的？
涉及到一个选择器权重问题：权重高的层叠掉权重低的。
标签、类、id权重比较（通配符权重最低）：
		div{
			color: red;
		}
		.x{
			color: green;
		}
		#xb{
			color: blue;
		}
<div class="x" id="xb">
		猜猜我的颜色是什么~？
	</div>
结果是：blue
权重：id选择器>类选择器>标签选择器。

到底一个标签的样式听谁的：
a.选择器都选中了元素。
首先，比较权重，权重大的样式层叠权重小的。
计算权重的方法：数基础选择器的个数，依此比较id个数>类的个数>标签个数。（id个数，类的个数，标签个数）
如果有并集，计算权重是单独拆开来计算。
如果权重一样，比较的是书写顺寻，谁写在后面听谁的。

b.如果没选中元素，样式靠继承。
第一种：祖先元素距离目标元素距离不同，继承的样式采取就近原则。
第二种：如果距离相同，去比较权重。
第三种：如果距离相同，权重也相同，听最后的。

c.关键词!important
给单一属性添加，会给这个属性的权重提升到最大。
前提：不适用于就近原则。